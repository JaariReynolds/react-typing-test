// CONSTANTS
$component-opacity-fade-duration: 200ms;
$text-colour-transition-duration: 200ms;
$letter-colour-transition-duration: 150ms;

$base-font-colour: rgb(161 161 170);
$selected-font-colour: rgb(253 224 71);
$correct-font-colour: rgb(255 255 255);
$incorrect-font-colour: rgb(220 38 38);
$hover-font-colour: rgb(255 255 255);

// VARIABLES CHANGED FROM REACT
:root {
  --component-opacity: 1;
  --typing-test-opacity: 1;
}

@mixin transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: $component-opacity-fade-duration;
  opacity: var(--component-opacity);
}

@mixin transition-colors {
  transition-property: color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: $text-colour-transition-duration;
}

.App {
  text-align: left;
  align-items: center;
  justify-content: center;
  background-color: #3a3c40;
  color: white;
  min-height: 100vh;
}

.main-container {
  display: flex;
  align-items: center;
  justify-content: center;
}

.inner-container {
  display: grid;
  grid-template-columns: repeat(3, minmax(0, 1fr));
  gap: 0.25rem;
  width: 80%;
}

.top-gap {
  grid-column: 1 / -1;
  height: 2.5rem;
}

.test-option-selector {
  grid-column: span 1 / span 1;
  text-align: center;
  -webkit-user-select: none;
  user-select: none;
  @include transition-opacity();

  .option-text {
    color: $base-font-colour;

    :hover {
      cursor: pointer;
      color: $hover-font-colour;
    }

    .hidden-radio-button {
      display: none;
    }

    .selectable-label {
      padding: 0.5rem;
      margin: 0.25rem;
      font-weight: 600;
      @include transition-colors();
    }
  }

  input[type="radio"]:checked+label {
    color: $selected-font-colour;
  }

  input[type="checkbox"]:checked+label {
    color: $selected-font-colour;
  }
}

.typing-test {
  grid-column: 1 / -1;
  -webkit-user-select: none;
  user-select: none;
  position: relative;

  .text-field-container {
    position: absolute;
    display: flex;
    width: 100%;
    height: 100%;

    .text-field {
      width: 100%;
      background-color: transparent;
      color: transparent;
      border: none;
    }

    input:focus {
      outline: none;
    }
  }

  .words-container {
    display: flex;
    flex-wrap: wrap;
    padding-bottom: 1rem;
    @include transition-opacity();
    opacity: var(--typing-test-opacity);

    .word {
      font-size: 2rem;
      line-height: 2.5rem;
      margin-right: 1rem;
      letter-spacing: 0.1em;

      .letter {
        transition-duration: $letter-colour-transition-duration;
        @include transition-colors();
      }

      // if these are changed, need to update letterColour() in TypingTest.tsx
      .base-text-colour {
        color: $base-font-colour;
      }

      .correct-text-colour {
        color: $correct-font-colour;
      }

      .incorrect-text-colour {
        color: $incorrect-font-colour;
      }
    }
  }
}

.reset-button {
  grid-column: 2;
  @include transition-opacity();
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}

.reset-button:hover .fa-spin-custom {
  color: $hover-font-colour;
  @include transition-colors();
}

.fa-spin-custom {
  animation: fa-spin-custom 10s infinite linear;
  font-size: 3rem;
  color: $base-font-colour;
  @include transition-colors();
  padding: 1rem;
}

@keyframes fa-spin-custom {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}