// CONSTANTS
$component-opacity-fade-duration: 300ms;
$completion-bar-transition-duration: 200ms;
$text-colour-transition-duration: 300ms;
$letter-colour-transition-duration: 200ms;

$background-colour: rgb(47, 50, 52);
$base-font-colour: rgb(161 161 170);
$results-background-colour: rgb(161, 161, 170, 0.5);
$selected-font-colour: rgb(253 224 71);
$correct-font-colour: rgb(255 255 255);
$incorrect-font-colour: rgb(220 38 38);
$hover-font-colour: rgb(255 255 255);

// VARIABLES CHANGED FROM REACT
:root {
  --test-type-words-opacity: 1;
  --test-type-time-opacity: 0;
  --component-opacity: 1;
  --completion-bar-opacity: 0;
  --typing-test-opacity: 1;
  --results-component-opacity: 0;
  --completion-percentage: 0%;
  --WPM-opacity: 0
}

@mixin transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: $component-opacity-fade-duration;
  opacity: var(--component-opacity);
}

@mixin transition-colors {
  transition-property: color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: $text-colour-transition-duration;
}

.App {
  text-align: left;
  align-items: center;
  justify-content: center;
  background-color: $background-colour;
  color: $base-font-colour;
  min-height: 100vh;
}

.main-container {
  display: flex;
  align-items: center;
  justify-content: center;

  .inner-container {
    width: 80%;

    .top-gap {
      height: 2.5rem;
    }

    .test-options {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: repeat(2, minmax(0, 1fr));
      margin-bottom: 2rem;

      .test-option-selector {
        @include transition-opacity();
        grid-column: span 1 / span 1;
        text-align: center;
        -webkit-user-select: none;
        user-select: none;
        margin-bottom: 1rem;

        &.uninteractable-selector {
          pointer-events: none;
        }

        &.test-type-words {
          opacity: var(--test-type-words-opacity);
          grid-area: 2 / 1;
        }

        &.test-type-time {
          opacity: var(--test-type-time-opacity);
          grid-area: 2 / 1;
        }

        .option-text {
          color: $base-font-colour;

          :hover {
            cursor: pointer;
            color: $hover-font-colour;
          }

          .hidden-radio-button {
            display: none;
          }

          .selectable-label {
            @include transition-colors();
            padding: 0.5rem;
            margin: 0.25rem;
            font-weight: 600;
          }
        }
      }
    }
  }

  input[type="radio"]:checked+label {
    color: $selected-font-colour;
  }

  input[type="checkbox"]:checked+label {
    color: $selected-font-colour;
  }
}

input[type="text"]::selection,
input[type="text"]::placeholder,
input[type="text"]::-moz-placeholder {
  text-decoration: none;
}

.typing-test {
  -webkit-user-select: none;
  user-select: none;
  grid-area: 1 / 1;
  margin-top: 5rem;
  position: relative;

  .text-field-container {
    position: absolute;
    display: flex;
    width: 100%;
    height: 100%;
    -webkit-user-select: none;
    user-select: none;

    .text-field {
      width: 100%;
      background-color: transparent;
      color: transparent;
      border: none;
    }

    input:focus {
      outline: none;
    }
  }


  .words-container {
    @include transition-opacity();
    display: flex;
    flex-wrap: wrap;
    padding-bottom: 1rem;
    opacity: var(--typing-test-opacity);

    .word {
      font-size: 2rem;
      line-height: 3rem;
      margin-right: 1rem;
      letter-spacing: 0.1em;

      :last-child {
        border-right: 3px solid transparent;
      }

      .letter {
        @include transition-colors();
        transition-duration: $letter-colour-transition-duration;
        border-left: 3px solid transparent;


        &.active {
          border-left: 3px solid $selected-font-colour;

          &.awaiting-input {
            animation: blinking-caret-left 1.5s linear infinite;
          }
        }

        &.active-last {
          border-right: 3px solid $selected-font-colour;

          &.awaiting-input {
            animation: blinking-caret-right 1.5s linear infinite;
          }
        }

        // if these are changed, need to update letterColour() in TypingTest.tsx
        &.base-text-colour {
          color: $base-font-colour;
        }

        &.correct-text-colour {
          color: $correct-font-colour;
        }

        &.incorrect-text-colour {
          color: $incorrect-font-colour;
        }
      }


    }
  }
}

.reset-container {
  display: grid;
  place-items: center;

  .reset-button {
    @include transition-opacity();
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
    width: 30%;

    :focus {
      outline: none;
    }
  }

  .reset-button:hover .fa-spin-custom {
    color: $hover-font-colour;
    animation: fa-spin-custom 10s infinite linear;
  }
}

.fa-spin-custom {
  @include transition-colors();
  font-size: 3rem;
  color: $base-font-colour;
  padding: 1rem;
}

.test-completion-bar {
  @include transition-colors();
  grid-area: 1 / 1;
  height: 0.5rem;
  border-radius: 0.5rem;
  background-color: $selected-font-colour;
  width: var(--completion-percentage);
  max-width: 100%;
  transition: width $completion-bar-transition-duration linear;
}

.results-overlap-container {
  display: grid;
  grid-template-areas: 1 / 1;
}

.test-results-div {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: $component-opacity-fade-duration;
  opacity: var(--results-component-opacity);
  background-color: $results-background-colour;
  border-radius: 0.5rem;
  grid-area: 1 / 1;
  max-width: 100%;

  .results-chart {
    display: flex;
    justify-content: center;
    align-items: center;
    //margin-left: -20px;
  }
}

.WPM-div {
  margin-top: 3rem;
  text-align: center;
  font-size: 4rem;
  color: $base-font-colour;
  opacity: var(--WPM-opacity);
}


@keyframes fa-spin-custom {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}


@keyframes blinking-caret-left {
  0% {
    border-left-color: $selected-font-colour;
  }

  50% {
    border-left-color: transparent;
  }

  100% {
    border-left-color: $selected-font-colour;
  }
}

@keyframes blinking-caret-right {
  0% {
    border-right-color: $selected-font-colour;
  }

  50% {
    border-right-color: transparent;
  }

  100% {
    border-right-color: $selected-font-colour;
  }
}