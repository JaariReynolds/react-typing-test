// CONSTANTS
$component-opacity-fade-duration: 300ms;
$completion-bar-transition-duration: 200ms;
$text-colour-transition-duration: 300ms;
$letter-colour-transition-duration: 200ms;

$background-colour: rgb(47, 50, 52);
$base-font-colour: rgb(161 161 170);
$results-background-colour: rgb(161, 161, 170, .7);
$selected-font-colour: rgb(253 224 71);
$correct-font-colour: rgb(255 255 255);
$incorrect-font-colour: rgb(220 38 38);
$hover-font-colour: rgb(255 255 255);

// VARIABLES CHANGED FROM REACT
:root {
  --test-type-words-opacity: 1;
  --test-type-time-opacity: 0;
  --component-opacity: 1;
  --completion-bar-opacity: 0;
  --typing-test-opacity: 1;
  --results-component-opacity: 0;
  --completion-percentage: 0%;
  --WPM-opacity: 0;
  --WPM-transition: opacity;
  --WPM-display: block;
  --test-words-display: block;
  --results-component-display: none;
  --test-words-max-height: 144px;
  --test-words-div-offset: 0px;
  --test-words-top-transition: none;
  --reset-div-margin: 0px;

}

@mixin transition-opacity($opacity) {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: $component-opacity-fade-duration;
  opacity: $opacity;
}

@mixin transition-words {
  transition-property: opacity, top;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1), ease-in-out;
  transition-duration: $component-opacity-fade-duration, 0.1s;
}

@mixin transition-text-color {
  transition-property: color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: $text-colour-transition-duration;
}

.App {
  text-align: left;
  align-items: center;
  justify-content: center;
  background-color: $background-colour;
  color: $base-font-colour;
  min-height: 100vh;
}

.main-container {
  display: flex;
  align-items: center;
  justify-content: center;

  .inner-container {
    width: 70%;
    position: relative;

    .top-gap {
      height: 10rem;
    }

    .test-options {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: repeat(2, minmax(0, 1fr));
      margin-bottom: 3rem;

      .test-option-selector {
        @include transition-opacity(var(--component-opacity));
        grid-column: span 1 / span 1;
        text-align: center;
        -webkit-user-select: none;
        user-select: none;
        margin-bottom: 1rem;

        &.uninteractable-selector {
          pointer-events: none;
        }

        &.test-type-words {
          opacity: var(--test-type-words-opacity);
          grid-area: 2 / 1;
        }

        &.test-type-time {
          opacity: var(--test-type-time-opacity);
          grid-area: 2 / 1;
        }

        .option-text {
          color: $base-font-colour;

          :hover {
            cursor: pointer;
            color: $hover-font-colour;
          }

          .hidden-radio-button {
            display: none;
          }

          .selectable-label {
            @include transition-text-color();
            padding: 0.5rem;
            margin: 0.25rem;
            font-weight: 600;
          }
        }
      }
    }
  }

  input[type="radio"]:checked+label {
    color: $selected-font-colour;
  }

  input[type="checkbox"]:checked+label {
    color: $selected-font-colour;
  }
}

input[type="text"]::selection,
input[type="text"]::placeholder,
input[type="text"]::-moz-placeholder {
  text-decoration: none;
}

.results-overlap-container {
  display: grid;
  grid-template-areas: 1 / 1;
  height: 20rem;
  //margin-top: 3rem;

  .WPM-div {
    //@include transition-opacity(var(--WPM-opacity));
    grid-area: 7/1;
    position: relative;
    text-align: center;
    font-size: 4rem;
    color: $base-font-colour;
    opacity: var(--WPM-opacity);
    display: var(--WPM-display);
  }

  .typing-test {
    margin-top: 3rem;
    -webkit-user-select: none;
    user-select: none;
    grid-area: 1 / 1;
    //margin-top: 5rem;
    width: 100%;
    height: var(--test-words-max-height);
    overflow: hidden;
    position: absolute;
    display: var(--test-words-display);
    ///border: 2px solid green;

    .text-field-container {
      position: absolute;
      display: flex;
      //top: -4rem;
      width: 100%;
      height: var(--test-words-max-height);
      -webkit-user-select: none;
      user-select: none;
      margin-bottom: 5rem;
      //border: 2px solid green;
      z-index: 10;

      .text-field {
        width: 100%;
        background-color: transparent;
        color: transparent;
        border: none;

      }

      input:focus {
        outline: none;
      }
    }

    .words-container {
      @include transition-words();
      display: flex;
      flex-wrap: wrap;
      opacity: var(--typing-test-opacity);
      max-height: var(--test-words-max-height);
      font-size: 2rem;
      line-height: 3rem;
      letter-spacing: 0.1em;
      top: var(--test-words-div-offset);
      position: absolute;

      .word {
        margin-right: 1rem;

        &.last-word {
          text-decoration: underline;
        }

        :last-child {
          border-right: 3px solid transparent;
        }

        .letter {
          @include transition-text-color();
          transition-duration: $letter-colour-transition-duration;
          border-left: 3px solid transparent;


          &.active {
            border-left: 3px solid $selected-font-colour;

            &.awaiting-input {
              animation: blinking-caret-left 1.5s linear infinite;
            }
          }

          &.active-last {
            border-right: 3px solid $selected-font-colour;

            &.awaiting-input {
              animation: blinking-caret-right 1.5s linear infinite;
            }
          }

          // if these are changed, need to update letterColour() in TypingTest.tsx
          &.base-text-colour {
            color: $base-font-colour;
          }

          &.correct-text-colour {
            color: $correct-font-colour;
          }

          &.incorrect-text-colour {
            color: $incorrect-font-colour;
          }
        }
      }
    }
  }
}


.reset-container {
  //transition: margin 0.3s ease-in-out;
  display: flex;
  justify-content: center;
  width: 100%;
  height: 7rem;
  margin-top: var(--reset-div-margin);

  .reset-button {
    @include transition-opacity(var(--component-opacity));
    transition: background-color 0.25s ease-in-out;
    width: 25%;
    border-radius: 0.5rem;

    &:focus {
      background-color: $base-font-colour;
      outline: none;

      .reset-icon {
        color: $background-colour;
      }
    }

    &:hover {
      background-color: $base-font-colour;

      .reset-icon {
        color: $background-colour;
      }
    }

    .reset-icon {
      font-size: 3rem;
      transition: color 0.3s ease-in-out;
      color: $base-font-colour;

      &.spinning-icon {
        animation: fa-spin-custom 3s infinite;
      }
    }
  }

}

.test-completion-bar {
  @include transition-text-color();
  grid-area: 1 / 1;
  height: 0.5rem;
  border-radius: 0.25rem;
  background-color: $selected-font-colour;
  width: var(--completion-percentage);
  max-width: 100%;
  transition: width $completion-bar-transition-duration linear;
  //transition: opacity 0.3s ease-in-out;
}



.test-results-div {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: $component-opacity-fade-duration;
  opacity: var(--results-component-opacity);
  margin-top: -0.5rem;
  background-color: $results-background-colour;
  border-radius: 0.25rem;
  grid-area: 1 / 1;
  max-width: 100%;
  display: var(--results-component-display);
  padding-top: 1.5rem;

  .results-chart {
    display: flex;
    justify-content: center;
    align-items: center;
  }
}



@keyframes fa-spin-custom {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

@keyframes blinking-caret-left {
  0% {
    border-left-color: $selected-font-colour;
  }

  50% {
    border-left-color: transparent;
  }

  100% {
    border-left-color: $selected-font-colour;
  }
}

@keyframes blinking-caret-right {
  0% {
    border-right-color: $selected-font-colour;
  }

  50% {
    border-right-color: transparent;
  }

  100% {
    border-right-color: $selected-font-colour;
  }
}