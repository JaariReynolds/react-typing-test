// CONSTANTS
$component-opacity-fade-duration: 300ms;
$completion-bar-transition-duration: 200ms;
$text-colour-transition-duration: 300ms;
$letter-colour-transition-duration: 200ms;
$base-font-size: 1.3rem;

$background-colour: rgb(47, 50, 52);
$base-font-colour: rgb(161 161 170);
$results-background-colour: rgb(161, 161, 170, 0);
$selected-font-colour: rgb(253 224 71);
$correct-font-colour: rgb(255 255 255);
$incorrect-font-colour: rgb(220 38 38);
$hover-font-colour: rgb(255 255 255);

// VARIABLES CHANGED FROM REACT
:root {
  --test-type-words-opacity: 1;
  --test-type-time-opacity: 0;
  --component-opacity: 1;
  --completion-bar-opacity: 0;
  --typing-test-opacity: 1;
  --results-component-opacity: 0;
  --completion-percentage: 0%;
  --WPM-opacity: 0;
  --WPM-transition: opacity;
  --WPM-display: block;
  --test-words-display: block;
  --results-component-display: none;
  --test-words-max-height: 144px;
  --test-words-div-offset: 0px;
  --test-words-top-transition: none;
  --reset-div-margin: 0rem;
  --reset-button-text-opacity: 0;
  --word-scroll-transition-property: top;
  --caret-position: 0px;
  --caret-top-offset: 0rem;
  --capslock-display: block;
  --capslock-opacity: 1;
}

@mixin transition-opacity($opacity) {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: $component-opacity-fade-duration;
  opacity: $opacity;
}

@mixin transition-words {
  transition-property: opacity, var(--word-scroll-transition-property);
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1), cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: $component-opacity-fade-duration, 0.2s;
}

@mixin transition-text-color {
  transition-property: color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: $text-colour-transition-duration;
}

body {
  margin: 0;
  background-color: $background-colour;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.App {
  text-align: left;
  align-items: center;
  justify-content: center;
  color: $base-font-colour;
  //background-color: $background-colour;
  height: 100vh;

}

@media (max-width: 670px) {
  .test-options {
    grid-template-columns: repeat(1, 1fr);
  }
}

@media (min-width: 671px) {
  .test-options {
    grid-template-columns: repeat(2, 1fr);
  }
}

.main-container {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  flex-direction: column;

  .inner-container {
    width: 70%;
    height: 10%;
    position: relative;
    margin-top: 8rem;

    .test-completion-bar {
      @include transition-text-color();
      display: flex;
      position: relative;
      height: 0.5rem;
      border-radius: 0.25rem;
      background-color: $selected-font-colour;
      width: var(--completion-percentage);
      max-width: 100%;
      transition: width $completion-bar-transition-duration linear;
      margin-top: 1rem;
    }

    .capslock-indicator-container {
      transition: opacity 0.1s ease-in-out;
      opacity: var(--capslock-opacity);
      display: flex;
      justify-content: center;
      position: relative;
      width: 100%;
      height: 40px;
      margin-top: 1rem;
      margin-bottom: 2rem;

      font-size: $base-font-size;

      .capslock-indicator-contents {
        align-items: center;
        width: 150px;
        border-radius: 0.5rem;
        justify-content: center;
        background-color: $selected-font-colour;
        color: $background-colour;
        display: flex;

        .capslock-icon {
          margin-top: auto;
          margin-bottom: auto;
          margin-right: 0.5rem; //border: 2px solid orange;
        }
      }
    }


    .test-options {
      display: grid;
      //grid-template-columns: repeat(2, minmax(0, 1fr));
      font-size: $base-font-size;
      //margin-bottom: 4rem;

      .test-options-icon {
        padding-right: 0.25rem;
      }

      .test-option-selector {
        @include transition-opacity(var(--component-opacity));
        grid-column: span 1 / span 1;
        text-align: center;
        -webkit-user-select: none;
        user-select: none;
        margin-bottom: 1rem;
        //border: 1px solid cyan;


        &.uninteractable-selector {
          pointer-events: none;
        }

        &.test-type-words {
          opacity: var(--test-type-words-opacity);
          grid-area: 2 / 1;
        }

        &.test-type-time {
          opacity: var(--test-type-time-opacity);
          grid-area: 2 / 1;
        }

        .option-text {
          color: $base-font-colour;

          :hover {
            cursor: pointer;
            color: $hover-font-colour;
          }

          .hidden-radio-button {
            display: none;
          }

          .selectable-label {
            @include transition-text-color();
            padding: 0.5rem;
            margin: 0.25rem;
            font-weight: 600;
          }
        }
      }
    }

  }

  .key-tips {
    @include transition-opacity(var(--component-opacity));
    opacity: var(--component-opacity);
    font-size: 0.9rem;
    margin-bottom: 1.5rem;
    text-align: center;
    letter-spacing: 0.1rem;
    margin-top: auto;
    font-weight: 600;

    .key-highlight {
      background-color: $base-font-colour;
      color: $background-colour;
      border-radius: 0.3rem;
      padding: 0.2rem 0.5rem;


    }
  }

  input[type="radio"]:checked+label {
    color: $selected-font-colour;
  }

  input[type="checkbox"]:checked+label {
    color: $selected-font-colour;
  }
}





// input[type="text"]::selection,
// input[type="text"]::placeholder,
// input[type="text"]::-moz-placeholder {
//   text-decoration: none;


// }



.results-overlap-container {
  display: grid;
  grid-template-areas: 1 / 1;
  height: 25rem;
  user-select: none;
  -webkit-user-select: none;

  .WPM-div {
    //@include transition-opacity(var(--WPM-opacity));
    grid-area: 7/1;
    position: relative;
    text-align: center;
    font-size: 4rem;
    color: $base-font-colour;
    opacity: var(--WPM-opacity);
    display: var(--WPM-display);
  }

  .typing-test {
    margin-top: 3rem;
    user-select: none;
    -webkit-user-select: none;
    grid-area: 1 / 1;
    //margin-top: 5rem;
    width: 100%;
    height: var(--test-words-max-height);
    overflow: hidden;
    position: absolute;
    display: var(--test-words-display);



    .text-field-container {
      position: absolute;
      display: flex;

      //top: -4rem;
      width: 100%;
      height: var(--test-words-max-height);
      margin-bottom: 5rem;
      z-index: 10;

      .text-field {
        width: 100%;
        background-color: transparent;
        color: transparent;
        border: none;
        font-size: 1px;

      }

      input:focus {
        outline: none;
      }
    }

    .debug {
      position: absolute;

    }

    .words-container {
      @include transition-words();
      display: flex;
      flex-wrap: wrap;
      opacity: var(--typing-test-opacity);
      max-height: var(--test-words-max-height);
      font-size: 2rem; // 'scroll transition' amount is dependent on the text properties in this class
      line-height: 3rem;
      letter-spacing: 0.1em;
      top: var(--test-words-div-offset);
      position: absolute;



      .caret {
        //transition: left 0.1s linear;
        transition-property: left, top;
        transition-timing-function: linear, linear;
        transition-duration: 0.125s, 0.125s;
        background-color: $selected-font-colour;
        border-radius: 0.25rem;
        width: .2rem;
        position: absolute;
        top: var(--caret-top-offset);
        height: 3rem; // should match line height of words ^
        left: var(--caret-position);

        &.awaiting-input {
          animation: blinking-caret 1.5s linear infinite;
        }
      }

      .word {
        margin-right: 1rem;

        &.last-word-in-line {
          text-decoration: underline;
        }

        .letter {
          @include transition-text-color();
          transition-duration: $letter-colour-transition-duration;
          border-left: 3px solid transparent;

          // if these are changed, need to update letterColour() in TypingTest.tsx
          &.base-text-colour {
            color: $base-font-colour;
          }

          &.correct-text-colour {
            color: $correct-font-colour;
          }

          &.incorrect-text-colour {
            color: $incorrect-font-colour;
          }
        }
      }
    }
  }
}

.reset-container {
  transition: margin 0.3s ease-in-out;
  display: block;
  justify-content: center;
  position: relative;
  height: 6.5rem;
  margin-top: var(--reset-div-margin);
  @include transition-opacity(var(--component-opacity));
  ///border: 2px solid orange;
  margin-bottom: 3rem;

  .reset-button-text {
    transition: opacity 0.15s ease-in-out;
    text-align: center;
    margin-top: -0.1rem;
    opacity: var(--reset-button-text-opacity);
    width: 100%;
    font-weight: 500;
    font-size: $base-font-size;


    //sborder: 2px solid green;
    height: 20%;
  }

  .reset-button {
    transition: background-color 0.15s ease-in-out;
    width: 150px;
    border-radius: 0.5rem;
    height: 80%;

    &:focus {
      background-color: $base-font-colour;
      outline: none;

      .reset-icon {
        color: $background-colour;
      }
    }

    &:hover {
      background-color: $base-font-colour;

      .reset-icon {
        color: $background-colour;
      }
    }

    .reset-icon {
      font-size: 3rem;
      transition: color 0.3s ease-in-out;
      color: $base-font-colour;

      &.spinning-icon {
        animation: fa-spin-custom 3s infinite;
      }
    }
  }

}





.test-results-div {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: $component-opacity-fade-duration;
  opacity: var(--results-component-opacity);
  margin-top: -0.5rem;
  border-radius: 0.25rem;
  grid-area: 1 / 1;
  max-width: 100%;
  display: var(--results-component-display);
  padding-top: 1.5rem;
  font-size: $base-font-size;

  .results-chart {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .test-results-statistics {
    margin-top: 1rem;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 5rem);

    .grid-item {
      display: grid;
      text-align: center;
      //padding-bottom: 1rem;

      .label {
        margin-top: -2.6rem;
        color: $base-font-colour;
        //padding-bottom: 2rem;
      }

      .score {
        color: $selected-font-colour;
        font-size: 2.3rem;
      }

      &.wpm {
        display: grid;
        grid-row: span 2;
        grid-column: 3;
        text-align: center;
        font-size: 5.5rem;
        color: $selected-font-colour;

        .wpm-label {
          color: $base-font-colour;
          grid-area: 2/1;
          margin-top: -2.2rem;
          font-size: $base-font-size;
        }
      }

    }
  }
}





@keyframes fa-spin-custom {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

@keyframes blinking-caret-left {
  0% {
    border-left-color: $selected-font-colour;
  }

  50% {
    border-left-color: transparent;
  }

  100% {
    border-left-color: $selected-font-colour;
  }
}

@keyframes blinking-caret {
  0% {
    background-color: $selected-font-colour;
  }

  50% {
    background-color: transparent;
  }

  100% {
    background-color: $selected-font-colour;
  }
}

@keyframes blinking-caret-right {
  0% {
    border-right-color: $selected-font-colour;
  }

  50% {
    border-right-color: transparent;
  }

  100% {
    border-right-color: $selected-font-colour;
  }
}